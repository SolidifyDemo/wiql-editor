export abstract class Symbol {}
/** symbols generated by the lexer */
export abstract class Token extends Symbol {
    //include line and column numbers for better debugging.
    public readonly line: number;
    public readonly column: number;
    constructor(line, column) {
        super();
        this.line = line;
        this.column = column;
    }
}
//Keywords
export class Select extends Token {}
export class From extends Token {}
export class Where extends Token{}
export class Order extends Token{}
export class By extends Token {}
export class Asc extends Token {}
export class Desc extends Token {}
export class Asof extends Token {}
export class Not extends Token {}
export class Ever extends Token {}
export class In extends Token {}
export class Like extends Token {}
export class Under extends Token {}
export class WorkItems extends Token {}
export class WorkItemLinks extends Token {}
//Operators
export class RParen extends Token {}
export class LParen extends Token {}
export class RSqBracket extends Token {}
export class LSqBracket extends Token {}
export class Comma extends Token {}
export class Equals extends Token {}
export class NotEquals extends Token {}
export class GreaterThan extends Token {}
export class LessThan extends Token {}
export class GreaterOrEq extends Token {}
export class LessOrEq extends Token {}

export class String extends Token {}
export class Field extends Token {}
export class Number extends Token {}